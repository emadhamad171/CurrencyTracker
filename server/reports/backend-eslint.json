[{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/prettierrc.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/scripts/analyze-backend.js","messages":[{"ruleId":"max-lines-per-function","severity":2,"message":"Arrow function has too many lines (101). Maximum allowed is 100.","line":164,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":271,"endColumn":2}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fs = require('fs');\nconst path = require('path');\nconst { execSync } = require('child_process');\n\nconsole.log('üîç –ê–Ω–∞–ª–∏–∑ Node.js —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–∏–ø–ª–æ–º–∞...\\n');\n\n// –°–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –æ—Ç—á–µ—Ç–æ–≤\nif (!fs.existsSync('reports')) {\n  fs.mkdirSync('reports');\n}\n\nconst runCommand = (command, description) => {\n  try {\n    console.log(`‚è≥ ${description}...`);\n    const result = execSync(command, { encoding: 'utf8', stdio: 'pipe' });\n    console.log(`‚úÖ ${description} - –≥–æ—Ç–æ–≤–æ`);\n    return result;\n  } catch (error) {\n    console.log(`‚ö†Ô∏è  ${description} - –Ω–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã`);\n    return error.stdout || '';\n  }\n};\n\n// 1. ESLint –∞–Ω–∞–ª–∏–∑ –±—ç–∫–µ–Ω–¥–∞\nrunCommand('npm run lint:json', 'ESLint –∞–Ω–∞–ª–∏–∑ —Å–µ—Ä–≤–µ—Ä–∞');\nrunCommand('npm run lint:html', 'ESLint HTML –æ—Ç—á–µ—Ç');\n\n// 2. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\nrunCommand(\n  'npm audit --json > reports/security-audit.json',\n  '–ê—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',\n);\n\n// 3. –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π\nrunCommand(\n  'npm run dependency-check > reports/dependencies.txt 2>&1',\n  '–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π',\n);\n\n// 4. –ê–Ω–∞–ª–∏–∑ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã\nconst analyzeArchitecture = () => {\n  const analysis = {\n    timestamp: new Date().toISOString(),\n    projectType: 'Node.js Express API Server',\n    structure: {},\n    metrics: {},\n    recommendations: [],\n  };\n\n  // –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞\n  const analyzeDirectory = (dir, level = 0) => {\n    if (!fs.existsSync(dir) || level > 3) {\n      return {};\n    }\n\n    const items = fs.readdirSync(dir);\n    const structure = {};\n\n    items.forEach((item) => {\n      const fullPath = path.join(dir, item);\n      const stat = fs.statSync(fullPath);\n\n      if (\n        stat.isDirectory() &&\n        !item.startsWith('.') &&\n        item !== 'node_modules'\n      ) {\n        structure[item] = analyzeDirectory(fullPath, level + 1);\n      } else if (\n        stat.isFile() &&\n        (item.endsWith('.js') || item.endsWith('.mjs') || item.endsWith('.ts'))\n      ) {\n        const content = fs.readFileSync(fullPath, 'utf8');\n        structure[item] = {\n          lines: content.split('\\n').length,\n          size: stat.size,\n          endpoints: (\n            content.match(/\\.(get|post|put|delete|patch)\\s*\\(/g) || []\n          ).length,\n          middleware: (content.match(/\\(req,\\s*res,\\s*next\\)/g) || []).length,\n          asyncFunctions: (content.match(/async\\s+function|async\\s+\\(/g) || [])\n            .length,\n        };\n      }\n    });\n\n    return structure;\n  };\n\n  analysis.structure = analyzeDirectory('.');\n\n  // –ü–æ–¥—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫\n  const calculateMetrics = (\n    struct,\n    metrics = { files: 0, totalLines: 0, endpoints: 0, middleware: 0 },\n  ) => {\n    Object.values(struct).forEach((item) => {\n      if (typeof item === 'object' && item.lines) {\n        metrics.files++;\n        metrics.totalLines += item.lines;\n        metrics.endpoints += item.endpoints || 0;\n        metrics.middleware += item.middleware || 0;\n      } else if (typeof item === 'object') {\n        calculateMetrics(item, metrics);\n      }\n    });\n    return metrics;\n  };\n\n  analysis.metrics = calculateMetrics(analysis.structure);\n\n  // –ê–Ω–∞–ª–∏–∑ ESLint —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n  try {\n    const eslintData = JSON.parse(\n      fs.readFileSync('reports/backend-eslint.json', 'utf8'),\n    );\n    analysis.metrics.eslint = {\n      totalFiles: eslintData.length,\n      totalErrors: eslintData.reduce((sum, file) => sum + file.errorCount, 0),\n      totalWarnings: eslintData.reduce(\n        (sum, file) => sum + file.warningCount,\n        0,\n      ),\n      filesWithIssues: eslintData.filter(\n        (f) => f.errorCount > 0 || f.warningCount > 0,\n      ).length,\n    };\n\n    // –ê–Ω–∞–ª–∏–∑ –ø—Ä–∞–≤–∏–ª\n    const ruleBreakdown = {};\n    eslintData.forEach((file) => {\n      file.messages.forEach((msg) => {\n        ruleBreakdown[msg.ruleId] = (ruleBreakdown[msg.ruleId] || 0) + 1;\n      });\n    });\n    analysis.ruleBreakdown = ruleBreakdown;\n  } catch (e) {\n    console.log('‚ö†Ô∏è  ESLint –æ—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');\n  }\n\n  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n  if (analysis.metrics.totalLines > 5000) {\n    analysis.recommendations.push('–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã');\n  }\n  if (analysis.metrics.endpoints > 50) {\n    analysis.recommendations.push('–ì—Ä—É–ø–ø–∏—Ä—É–π—Ç–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –ø–æ –º–æ–¥—É–ª—è–º');\n  }\n  if (analysis.metrics.eslint?.totalErrors > 20) {\n    analysis.recommendations.push(\n      '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ ESLint',\n    );\n  }\n\n  return analysis;\n};\n\nconst backendAnalysis = analyzeArchitecture();\nfs.writeFileSync(\n  'reports/backend-analysis.json',\n  JSON.stringify(backendAnalysis, null, 2),\n);\n\n// 5. –°–æ–∑–¥–∞–Ω–∏–µ HTML –æ—Ç—á–µ—Ç–∞\nconst createBackendReport = () => {\n  const data = backendAnalysis;\n\n  const htmlReport = `\n<!DOCTYPE html>\n<html lang=\"ru\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>–ê–Ω–∞–ª–∏–∑ Node.js —Å–µ—Ä–≤–µ—Ä–∞</title>\n    <style>\n        body { font-family: Arial; margin: 20px; background: #f5f5f5; }\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; }\n        .metric-card { background: #f8f9fa; padding: 20px; margin: 10px; border-radius: 8px; display: inline-block; min-width: 200px; }\n        .metric-title { font-weight: bold; color: #333; margin-bottom: 10px; }\n        .metric-value { font-size: 24px; color: #007bff; font-weight: bold; }\n        .good { color: #28a745; }\n        .warning { color: #ffc107; }\n        .error { color: #dc3545; }\n        table { width: 100%; border-collapse: collapse; margin: 20px 0; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        .recommendation { background: #e3f2fd; padding: 15px; margin: 10px 0; border-left: 4px solid #2196f3; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>üîç –ê–Ω–∞–ª–∏–∑ Node.js API –°–µ—Ä–≤–µ—Ä–∞</h1>\n        <p>–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: ${new Date(data.timestamp).toLocaleString('ru-RU')}</p>\n        \n        <h2>üìä –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏</h2>\n        <div class=\"metric-card\">\n            <div class=\"metric-title\">–§–∞–π–ª–æ–≤ –∫–æ–¥–∞</div>\n            <div class=\"metric-value\">${data.metrics.files}</div>\n        </div>\n        <div class=\"metric-card\">\n            <div class=\"metric-title\">–°—Ç—Ä–æ–∫ –∫–æ–¥–∞</div>\n            <div class=\"metric-value\">${data.metrics.totalLines}</div>\n        </div>\n        <div class=\"metric-card\">\n            <div class=\"metric-title\">API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤</div>\n            <div class=\"metric-value\">${data.metrics.endpoints}</div>\n        </div>\n        <div class=\"metric-card\">\n            <div class=\"metric-title\">Middleware —Ñ—É–Ω–∫—Ü–∏–π</div>\n            <div class=\"metric-value\">${data.metrics.middleware}</div>\n        </div>\n\n        ${\n          data.metrics.eslint\n            ? `\n        <h2>üîç –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞</h2>\n        <div class=\"metric-card\">\n            <div class=\"metric-title\">ESLint –æ—à–∏–±–∫–∏</div>\n            <div class=\"metric-value ${data.metrics.eslint.totalErrors === 0 ? 'good' : 'error'}\">${data.metrics.eslint.totalErrors}</div>\n        </div>\n        <div class=\"metric-card\">\n            <div class=\"metric-title\">ESLint –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è</div>\n            <div class=\"metric-value ${data.metrics.eslint.totalWarnings < 10 ? 'good' : 'warning'}\">${data.metrics.eslint.totalWarnings}</div>\n        </div>\n        <div class=\"metric-card\">\n            <div class=\"metric-title\">–§–∞–π–ª–æ–≤ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏</div>\n            <div class=\"metric-value\">${data.metrics.eslint.filesWithIssues}/${data.metrics.eslint.totalFiles}</div>\n        </div>\n        `\n            : ''\n        }\n\n        ${\n          data.ruleBreakdown\n            ? `\n        <h2>üìã –¢–æ–ø –Ω–∞—Ä—É—à–µ–Ω–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª</h2>\n        <table>\n            <tr><th>–ü—Ä–∞–≤–∏–ª–æ</th><th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th><th>–û–ø–∏—Å–∞–Ω–∏–µ</th></tr>\n            ${Object.entries(data.ruleBreakdown)\n              .sort(([, a], [, b]) => b - a)\n              .slice(0, 10)\n              .map(([rule, count]) => {\n                const descriptions = {\n                  complexity: '–í—ã—Å–æ–∫–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–π',\n                  'max-lines-per-function': '–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏',\n                  'no-console': '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ console.log',\n                  'security/detect-object-injection':\n                    '–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —É—è–∑–≤–∏–º–æ—Å—Ç—å',\n                  'consistent-return': '–ù–µ–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π return',\n                };\n                return `<tr><td>${rule}</td><td>${count}</td><td>${descriptions[rule] || '–ù–∞—Ä—É—à–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤ –∫–æ–¥–∞'}</td></tr>`;\n              })\n              .join('')}\n        </table>\n        `\n            : ''\n        }\n\n        <h2>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>\n        ${data.recommendations.map((rec) => `<div class=\"recommendation\">${rec}</div>`).join('')}\n\n        <h2>üîó –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã</h2>\n        <ul>\n            <li><a href=\"./backend-eslint.html\">ESLint –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç</a></li>\n            <li><a href=\"./security-audit.json\">–ê—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</a></li>\n            <li><a href=\"./dependencies.txt\">–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π</a></li>\n        </ul>\n    </div>\n</body>\n</html>`;\n\n  fs.writeFileSync('reports/backend-report.html', htmlReport);\n};\n\ncreateBackendReport();\n\nconsole.log('\\nüìä –ú–ï–¢–†–ò–ö–ò NODE.JS –°–ï–†–í–ï–†–ê:');\nconsole.log(`üìÅ –§–∞–π–ª–æ–≤ –∫–æ–¥–∞: ${backendAnalysis.metrics.files}`);\nconsole.log(`üìÑ –°—Ç—Ä–æ–∫ –∫–æ–¥–∞: ${backendAnalysis.metrics.totalLines}`);\nconsole.log(`üåê API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤: ${backendAnalysis.metrics.endpoints}`);\nconsole.log(`‚öôÔ∏è  Middleware: ${backendAnalysis.metrics.middleware}`);\n\nif (backendAnalysis.metrics.eslint) {\n  console.log(\n    `‚ùå ESLint –æ—à–∏–±–∫–∏: ${backendAnalysis.metrics.eslint.totalErrors}`,\n  );\n  console.log(\n    `‚ö†Ô∏è  ESLint –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${backendAnalysis.metrics.eslint.totalWarnings}`,\n  );\n  console.log(\n    `üî• –§–∞–π–ª–æ–≤ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏: ${backendAnalysis.metrics.eslint.filesWithIssues}`,\n  );\n}\n\nconsole.log('\\nüéâ –ê–Ω–∞–ª–∏–∑ Node.js —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!');\nconsole.log('üìÅ –û—Ç—á–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫—É reports/');\nconsole.log('üåê –û—Ç–∫—Ä–æ–π—Ç–µ reports/backend-report.html');\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/app.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/config/env.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/controllers/currencyController.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/controllers/forecastController.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'gbpUsdHistory' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":65,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":65,"endColumn":40},{"ruleId":"max-statements","severity":2,"message":"Async arrow function has too many statements (31). Maximum allowed is 30.","line":145,"column":42,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":244,"endColumn":2},{"ruleId":"no-unused-vars","severity":2,"message":"'historyUrl' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":155,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":155,"endColumn":21},{"ruleId":"max-statements","severity":2,"message":"Async arrow function has too many statements (33). Maximum allowed is 30.","line":271,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":362,"endColumn":2},{"ruleId":"complexity","severity":2,"message":"Async arrow function has a complexity of 16. Maximum allowed is 15.","line":271,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":362,"endColumn":2},{"ruleId":"no-unused-vars","severity":2,"message":"'nbuResponse' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":378,"column":38,"nodeType":"Identifier","messageId":"unusedVar","endLine":378,"endColumn":49},{"ruleId":"max-lines-per-function","severity":2,"message":"Async arrow function has too many lines (156). Maximum allowed is 100.","line":475,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":647,"endColumn":2},{"ruleId":"max-statements","severity":2,"message":"Async arrow function has too many statements (32). Maximum allowed is 30.","line":475,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":647,"endColumn":2},{"ruleId":"complexity","severity":2,"message":"Async arrow function has a complexity of 18. Maximum allowed is 15.","line":475,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":647,"endColumn":2},{"ruleId":"max-lines-per-function","severity":2,"message":"Async arrow function has too many lines (139). Maximum allowed is 100.","line":650,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":800,"endColumn":2},{"ruleId":"max-statements","severity":2,"message":"Async arrow function has too many statements (33). Maximum allowed is 30.","line":803,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":899,"endColumn":2},{"ruleId":"max-lines-per-function","severity":2,"message":"Async arrow function has too many lines (222). Maximum allowed is 100.","line":996,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":1250,"endColumn":2},{"ruleId":"max-statements","severity":2,"message":"Async arrow function has too many statements (93). Maximum allowed is 30.","line":996,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":1250,"endColumn":2},{"ruleId":"complexity","severity":2,"message":"Async arrow function has a complexity of 38. Maximum allowed is 15.","line":996,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1250,"endColumn":2},{"ruleId":"max-params","severity":2,"message":"Async arrow function has too many parameters (6). Maximum allowed is 5.","line":1003,"column":3,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":1003,"endColumn":5},{"ruleId":"max-lines-per-function","severity":2,"message":"Async arrow function has too many lines (196). Maximum allowed is 100.","line":1253,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":1481,"endColumn":2},{"ruleId":"max-statements","severity":2,"message":"Async arrow function has too many statements (86). Maximum allowed is 30.","line":1253,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":1481,"endColumn":2},{"ruleId":"complexity","severity":2,"message":"Async arrow function has a complexity of 34. Maximum allowed is 15.","line":1253,"column":32,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1481,"endColumn":2},{"ruleId":"max-params","severity":2,"message":"Async arrow function has too many parameters (6). Maximum allowed is 5.","line":1260,"column":3,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":1260,"endColumn":5},{"ruleId":"no-unused-vars","severity":2,"message":"'eurUsdCorrelation' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":1277,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":1277,"endColumn":26},{"ruleId":"max-lines-per-function","severity":2,"message":"Async arrow function has too many lines (180). Maximum allowed is 100.","line":1528,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":1736,"endColumn":2},{"ruleId":"complexity","severity":2,"message":"Async arrow function has a complexity of 17. Maximum allowed is 15.","line":1528,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1736,"endColumn":2}],"suppressedMessages":[],"errorCount":22,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// server/src/controllers/forecastController.js\nconst axios = require('axios');\nconst ALPHA_VANTAGE_KEY = process.env.ALPHA_VANTAGE_KEY || 'YOUR_TOKEN_HERE';\n\n// ====== CACHING ======\nconst cache = new Map();\nconst CACHE_DURATION = 15 * 60 * 1000; // 15 minutes\n\nconst getCached = (key) => {\n  const cached = cache.get(key);\n  if (cached && Date.now() - cached.timestamp < CACHE_DURATION) {\n    return cached.data;\n  }\n  return null;\n};\n\nconst setCache = (key, data) => {\n  cache.set(key, { data, timestamp: Date.now() });\n};\n\n// ====== CURRENT FALLBACK DATA ======\nconst getLatestFallbackRates = () => {\n  // Update fallback data based on latest known values (May 2025)\n  return {\n    fed: 5.5, // Latest known Fed rate\n    ecb: 4.5, // Latest known ECB rate\n    nbu: 14.5, // Latest known NBU rate\n    usdUah: { official: 41.2, market: 41.8 }, // Current rates\n    eurUah: { official: 44.1, market: 44.6 }, // Current rates\n  };\n};\n\n// ====== PEARSON CORRELATION CALCULATION FUNCTION ======\nconst calculateCorrelation = (x, y) => {\n  const n = x.length;\n  if (n < 2) {\n    return 0;\n  }\n\n  const sumX = x.reduce((a, b) => a + b, 0);\n  const sumY = y.reduce((a, b) => a + b, 0);\n  const sumXY = x.reduce((sum, xi, i) => sum + xi * y[i], 0);\n  const sumX2 = x.reduce((sum, xi) => sum + xi * xi, 0);\n  const sumY2 = y.reduce((sum, yi) => sum + yi * yi, 0);\n\n  const numerator = n * sumXY - sumX * sumY;\n  const denominator = Math.sqrt(\n    (n * sumX2 - sumX * sumX) * (n * sumY2 - sumY * sumY),\n  );\n\n  if (denominator === 0) {\n    return 0;\n  }\n\n  const correlation = numerator / denominator;\n  return isNaN(correlation) ? 0 : correlation;\n};\n\n// ====== 2. CORRELATION REPLACEMENT - Alpha Vantage instead of Yahoo Finance ======\nconst calculateRealCorrelations = async (dxy, rates, currentRates) => {\n  try {\n    console.log('üìä Calculating correlations with Alpha Vantage...');\n\n    // Get historical data through Alpha Vantage\n    const [eurUsdHistory, gbpUsdHistory] = await Promise.allSettled([\n      // EUR/USD historical data\n      axios.get('https://www.alphavantage.co/query', {\n        params: {\n          function: 'FX_DAILY',\n          from_symbol: 'EUR',\n          to_symbol: 'USD',\n          apikey: ALPHA_VANTAGE_KEY,\n        },\n        timeout: 10000,\n      }),\n\n      // GBP/USD for additional analysis\n      axios.get('https://www.alphavantage.co/query', {\n        params: {\n          function: 'FX_DAILY',\n          from_symbol: 'GBP',\n          to_symbol: 'USD',\n          apikey: ALPHA_VANTAGE_KEY,\n        },\n        timeout: 10000,\n      }),\n    ]);\n\n    let usdEurCorrelation = -0.7; // Fallback\n    let dxyUahCorrelation = 0.8; // Fallback\n\n    // If we got EUR/USD data - calculate real correlation\n    if (\n      eurUsdHistory.status === 'fulfilled' &&\n      eurUsdHistory.value.data?.['Time Series FX (Daily)']\n    ) {\n      const timeSeries = eurUsdHistory.value.data['Time Series FX (Daily)'];\n      const dates = Object.keys(timeSeries).sort().reverse().slice(0, 20); // Last 20 days\n\n      const eurPrices = dates.map((date) =>\n        parseFloat(timeSeries[date]['4. close']),\n      );\n      const dxyPrices = eurPrices.map((price) => 100 / price); // Invert for DXY\n\n      if (eurPrices.length === dxyPrices.length && eurPrices.length > 10) {\n        usdEurCorrelation = calculateCorrelation(dxyPrices, eurPrices);\n        console.log(\n          '‚úÖ Real USD/EUR correlation calculated from Alpha Vantage:',\n          usdEurCorrelation,\n        );\n      }\n    }\n\n    // DXY/UAH correlation estimated through rate spreads (as before)\n    const usdSpread = currentRates.USDUAH.market - currentRates.USDUAH.official;\n    if (Math.abs(usdSpread) > 1) {\n      dxyUahCorrelation = 0.85; // High correlation under stress\n    } else {\n      dxyUahCorrelation = 0.75; // Normal correlation\n    }\n\n    return {\n      usdEurCorrelation: parseFloat(usdEurCorrelation.toFixed(2)),\n      dxyUahCorrelation: parseFloat(dxyUahCorrelation.toFixed(2)),\n      ratesDifferentialImpact: Math.abs(rates.fed - rates.ecb) * 0.15,\n      source:\n        eurUsdHistory.status === 'fulfilled'\n          ? 'Alpha Vantage Real Data'\n          : 'Estimated with Alpha Vantage fallback',\n    };\n  } catch (error) {\n    console.log(\n      '‚ö†Ô∏è Alpha Vantage correlation calculation failed, using estimates',\n    );\n    return {\n      usdEurCorrelation: -0.7,\n      dxyUahCorrelation: 0.8,\n      ratesDifferentialImpact: Math.abs(rates.fed - rates.ecb) * 0.1,\n      source: 'Fallback estimates (Alpha Vantage unavailable)',\n    };\n  }\n};\n\n// ====== 3. TECHNICAL LEVELS REPLACEMENT - Alpha Vantage instead of Yahoo Finance ======\nconst calculateAdvancedTechnicalLevels = async (\n  currentPrice,\n  symbol,\n  volatilityScore,\n) => {\n  try {\n    console.log(\n      `üìà Calculating technical levels for ${symbol} with Alpha Vantage...`,\n    );\n\n    const historyUrl = '';\n    let fromSymbol = '';\n    let toSymbol = '';\n\n    if (symbol === 'USDUAH') {\n      fromSymbol = 'USD';\n      toSymbol = 'RUB'; // Use RUB as proxy for UAH\n    } else if (symbol === 'EURUAH') {\n      fromSymbol = 'EUR';\n      toSymbol = 'PLN'; // Use PLN as proxy\n    }\n\n    if (fromSymbol && toSymbol) {\n      const response = await axios.get('https://www.alphavantage.co/query', {\n        params: {\n          function: 'FX_DAILY',\n          from_symbol: fromSymbol,\n          to_symbol: toSymbol,\n          apikey: ALPHA_VANTAGE_KEY,\n        },\n        timeout: 8000,\n      });\n\n      if (response.data && response.data['Time Series FX (Daily)']) {\n        const timeSeries = response.data['Time Series FX (Daily)'];\n        const dates = Object.keys(timeSeries).sort().reverse().slice(0, 30); // 30 days\n\n        const closes = dates.map((date) =>\n          parseFloat(timeSeries[date]['4. close']),\n        );\n        const highs = dates.map((date) =>\n          parseFloat(timeSeries[date]['2. high']),\n        );\n        const lows = dates.map((date) =>\n          parseFloat(timeSeries[date]['3. low']),\n        );\n\n        if (closes.length > 20) {\n          // Real technical levels based on Alpha Vantage data\n          const recentCloses = closes.slice(0, 20);\n          const recentHighs = highs.slice(0, 20);\n          const recentLows = lows.slice(0, 20);\n\n          // Adapt prices to current symbol\n          const priceRatio = currentPrice / closes[0];\n\n          const resistance = Math.max(...recentHighs) * priceRatio;\n          const support = Math.min(...recentLows) * priceRatio;\n\n          // Pivot levels\n          const pivot =\n            (Math.max(...recentCloses.slice(0, 5)) +\n              Math.min(...recentCloses.slice(0, 5)) +\n              currentPrice) /\n            3;\n\n          console.log('‚úÖ Technical levels calculated from Alpha Vantage data');\n          return {\n            support: parseFloat(support.toFixed(2)),\n            resistance: parseFloat(resistance.toFixed(2)),\n            pivot: parseFloat(pivot.toFixed(2)),\n            dynamicSupport: parseFloat((currentPrice * 0.98).toFixed(2)),\n            dynamicResistance: parseFloat((currentPrice * 1.02).toFixed(2)),\n            source: 'Alpha Vantage market data',\n          };\n        }\n      }\n    }\n  } catch (error) {\n    console.log(\n      '‚ö†Ô∏è Alpha Vantage technical levels failed, using mathematical model',\n    );\n  }\n\n  // Fallback - improved formula (remains as before)\n  const volatilityMultiplier = Math.min(\n    Math.max(volatilityScore / 10, 0.01),\n    0.05,\n  );\n  return {\n    support: parseFloat((currentPrice * (1 - volatilityMultiplier)).toFixed(2)),\n    resistance: parseFloat(\n      (currentPrice * (1 + volatilityMultiplier)).toFixed(2),\n    ),\n    pivot: currentPrice,\n    dynamicSupport: parseFloat((currentPrice * 0.985).toFixed(2)),\n    dynamicResistance: parseFloat((currentPrice * 1.015).toFixed(2)),\n    source: 'Mathematical estimate (Alpha Vantage unavailable)',\n  };\n};\n\n// ====== ADAPTIVE THRESHOLDS BASED ON VOLATILITY ======\nconst getAdaptiveThresholds = (dxy, rates, gdp) => {\n  // Base thresholds adapt to current volatility\n  const baseVolatility = Math.abs(dxy.changePercent);\n  const rateStress = Math.abs(rates.fed - rates.ecb);\n  const gdpVolatility = Math.abs(gdp.usa.value - gdp.eu.value);\n\n  // Dynamic thresholds\n  const dxyStrongThreshold = baseVolatility > 0.5 ? 0.2 : 0.3;\n  const rateDiffThreshold = rateStress > 2 ? 1.5 : 2.0;\n  const gdpDiffThreshold = gdpVolatility > 2 ? 2.5 : 3.0;\n\n  return {\n    dxyStrong: dxyStrongThreshold,\n    rateDiff: rateDiffThreshold,\n    gdpDiff: gdpDiffThreshold,\n    confidence: {\n      base: 55 + Math.min(baseVolatility * 10, 15), // 55-70%\n      dxyBonus: Math.min(baseVolatility * 20, 15),\n      rateBonus: rateStress > 1 ? 10 : 5,\n      gdpBonus: gdpVolatility > 1 ? 8 : 3,\n    },\n  };\n};\n\nconst getDXYData = async () => {\n  const cacheKey = 'dxy_alpha_vantage';\n  const cached = getCached(cacheKey);\n  if (cached) {\n    return cached;\n  }\n\n  // ALWAYS AVAILABLE FALLBACK\n  const fallbackData = {\n    value: 104.2,\n    change: -0.15,\n    changePercent: -0.14,\n    trend: 'sideways',\n    source: 'Fallback data (Alpha Vantage unavailable)',\n    timestamp: Date.now(),\n  };\n\n  try {\n    console.log('üíµ Fetching DXY data from Alpha Vantage...');\n\n    // MAIN REQUEST\n    const response = await axios.get('https://www.alphavantage.co/query', {\n      params: {\n        function: 'FX_DAILY',\n        from_symbol: 'USD',\n        to_symbol: 'EUR',\n        apikey: ALPHA_VANTAGE_KEY,\n      },\n      timeout: 10000,\n    });\n\n    console.log('Alpha Vantage response:', response.data);\n\n    if (response.data && response.data['Time Series FX (Daily)']) {\n      const dailySeries = response.data['Time Series FX (Daily)'];\n      const dates = Object.keys(dailySeries);\n\n      if (dates.length >= 2) {\n        dates.sort().reverse();\n\n        const current = parseFloat(dailySeries[dates[0]]['4. close']);\n        const previous = parseFloat(dailySeries[dates[1]]['4. close']);\n\n        if (\n          !isNaN(current) &&\n          !isNaN(previous) &&\n          current > 0 &&\n          previous > 0\n        ) {\n          // Invert EUR/USD to get DXY\n          const currentDXY = 100 / current;\n          const previousDXY = 100 / previous;\n\n          const change = currentDXY - previousDXY;\n          const changePercent = (change / previousDXY) * 100;\n\n          const data = {\n            value: parseFloat(currentDXY.toFixed(2)),\n            change: parseFloat(change.toFixed(2)),\n            changePercent: parseFloat(changePercent.toFixed(2)),\n            trend:\n              changePercent > 0.1\n                ? 'up'\n                : changePercent < -0.1\n                  ? 'down'\n                  : 'sideways',\n            source: 'Alpha Vantage Daily (EUR/USD inverted)',\n            timestamp: Date.now(),\n          };\n\n          console.log('‚úÖ Alpha Vantage DXY:', data);\n          setCache(cacheKey, data);\n          return data;\n        }\n      }\n    }\n\n    // CHECK API ERRORS\n    if (response.data && response.data['Error Message']) {\n      console.log('‚ö†Ô∏è Alpha Vantage error:', response.data['Error Message']);\n    }\n    if (response.data && response.data['Note']) {\n      console.log('‚ö†Ô∏è Alpha Vantage limit:', response.data['Note']);\n    }\n\n    console.log('‚ö†Ô∏è Alpha Vantage data not available, using fallback');\n    return fallbackData;\n  } catch (error) {\n    console.error('‚ùå Alpha Vantage error:', error.message);\n    return fallbackData;\n  }\n};\n\n// ====== 2. INTEREST RATES - REAL DATA ======\nconst getInterestRates = async () => {\n  const cacheKey = 'rates_real';\n  const cached = getCached(cacheKey);\n  if (cached) {\n    return cached;\n  }\n\n  console.log('üè¶ Fetching REAL interest rates...');\n\n  try {\n    const fallbacks = getLatestFallbackRates();\n\n    // Parallel requests for all rates\n    const [fedResponse, ecbResponse, nbuResponse] = await Promise.allSettled([\n      // 1. Fed rate (FRED)\n      axios.get('https://api.stlouisfed.org/fred/series/observations', {\n        params: {\n          series_id: 'FEDFUNDS',\n          api_key: 'e5cf268f12e7d069e590fd380d5c66b0',\n          file_type: 'json',\n          limit: 1,\n          sort_order: 'desc',\n        },\n        timeout: 8000,\n      }),\n\n      // 2. ECB rate (FRED)\n      axios.get('https://api.stlouisfed.org/fred/series/observations', {\n        params: {\n          series_id: 'IRSTFR01EZM156N', // ECB main refinancing rate\n          api_key: 'e5cf268f12e7d069e590fd380d5c66b0',\n          file_type: 'json',\n          limit: 1,\n          sort_order: 'desc',\n        },\n        timeout: 8000,\n      }),\n\n      // 3. NBU rate - try to get from NBU API\n      axios.get(\n        'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange',\n        {\n          params: { json: true },\n          timeout: 5000,\n        },\n      ),\n    ]);\n\n    // Process Fed rate\n    let fedRate = fallbacks.fed; // Current fallback\n    if (\n      fedResponse.status === 'fulfilled' &&\n      fedResponse.value.data?.observations?.[0]?.value !== '.'\n    ) {\n      fedRate = parseFloat(fedResponse.value.data.observations[0].value);\n    }\n\n    // Process ECB rate\n    let ecbRate = fallbacks.ecb; // Current fallback\n    if (\n      ecbResponse.status === 'fulfilled' &&\n      ecbResponse.value.data?.observations?.[0]?.value !== '.'\n    ) {\n      ecbRate = parseFloat(ecbResponse.value.data.observations[0].value);\n    }\n\n    // Process NBU rate\n    const nbuRate = fallbacks.nbu; // Current fallback\n    // NBU API usually doesn't return rate directly, use known value\n\n    const data = {\n      fed: fedRate,\n      ecb: ecbRate,\n      nbu: nbuRate,\n      difference: parseFloat((fedRate - ecbRate).toFixed(2)),\n      source: 'REAL API data with updated fallbacks',\n      sources: {\n        fed:\n          fedResponse.status === 'fulfilled'\n            ? 'FRED Official'\n            : 'Updated fallback (May 2025)',\n        ecb:\n          ecbResponse.status === 'fulfilled'\n            ? 'FRED Official'\n            : 'Updated fallback (May 2025)',\n        nbu: 'NBU Official/Updated fallback (May 2025)',\n      },\n      timestamp: Date.now(),\n    };\n\n    console.log('‚úÖ REAL Interest Rates:', data);\n    setCache(cacheKey, data);\n    return data;\n  } catch (error) {\n    console.error('‚ùå Interest rates error:', error.message);\n    const fallbacks = getLatestFallbackRates();\n    const fallbackData = {\n      fed: fallbacks.fed,\n      ecb: fallbacks.ecb,\n      nbu: fallbacks.nbu,\n      difference: parseFloat((fallbacks.fed - fallbacks.ecb).toFixed(2)),\n      source: 'Updated fallback rates (May 2025)',\n      sources: { fed: 'Fallback', ecb: 'Fallback', nbu: 'Fallback' },\n      timestamp: Date.now(),\n    };\n    return fallbackData;\n  }\n};\n\n// ====== 3. GDP DATA - REAL API ======\nconst getGDPData = async () => {\n  const cacheKey = 'gdp_real';\n  const cached = getCached(cacheKey);\n  if (cached) {\n    return cached;\n  }\n\n  try {\n    console.log('üìà Fetching REAL GDP data from multiple sources...');\n\n    // Parallel requests for all countries\n    const [usaResponse, euResponse, ukraineResponse] = await Promise.allSettled(\n      [\n        // USA - World Bank\n        axios.get(\n          'https://api.worldbank.org/v2/country/USA/indicator/NY.GDP.MKTP.KD.ZG',\n          {\n            params: { format: 'json', date: '2022:2024', per_page: 3 },\n            timeout: 10000,\n          },\n        ),\n\n        // EU - World Bank\n        axios.get(\n          'https://api.worldbank.org/v2/country/EUU/indicator/NY.GDP.MKTP.KD.ZG',\n          {\n            params: { format: 'json', date: '2022:2024', per_page: 3 },\n            timeout: 10000,\n          },\n        ),\n\n        // Ukraine - World Bank\n        axios.get(\n          'https://api.worldbank.org/v2/country/UKR/indicator/NY.GDP.MKTP.KD.ZG',\n          {\n            params: { format: 'json', date: '2022:2024', per_page: 3 },\n            timeout: 10000,\n          },\n        ),\n      ],\n    );\n\n    // Process USA\n    let usaGDP = {\n      value: 2.4,\n      trend: 'up',\n      year: '2024',\n      source: 'Updated fallback',\n    };\n    if (\n      usaResponse.status === 'fulfilled' &&\n      usaResponse.value.data?.[1]?.length > 0\n    ) {\n      const usaData = usaResponse.value.data[1].find(\n        (item) => item.value !== null,\n      );\n      if (usaData) {\n        const prevData = usaResponse.value.data[1].find(\n          (item) =>\n            item.value !== null && parseInt(item.date) < parseInt(usaData.date),\n        );\n        usaGDP = {\n          value: parseFloat(usaData.value.toFixed(1)),\n          trend: prevData\n            ? usaData.value > prevData.value\n              ? 'up'\n              : 'down'\n            : 'up',\n          year: usaData.date,\n          source: 'World Bank Official',\n        };\n      }\n    }\n\n    // Process EU\n    let euGDP = {\n      value: 0.8,\n      trend: 'up',\n      year: '2024',\n      source: 'Updated fallback',\n    };\n    if (\n      euResponse.status === 'fulfilled' &&\n      euResponse.value.data?.[1]?.length > 0\n    ) {\n      const euData = euResponse.value.data[1].find(\n        (item) => item.value !== null,\n      );\n      if (euData) {\n        const prevData = euResponse.value.data[1].find(\n          (item) =>\n            item.value !== null && parseInt(item.date) < parseInt(euData.date),\n        );\n        euGDP = {\n          value: parseFloat(euData.value.toFixed(1)),\n          trend: prevData\n            ? euData.value > prevData.value\n              ? 'up'\n              : 'down'\n            : 'up',\n          year: euData.date,\n          source: 'World Bank Official',\n        };\n      }\n    }\n\n    // Process Ukraine\n    let ukraineGDP = {\n      value: 4.2,\n      trend: 'up',\n      year: '2024',\n      source: 'Updated fallback',\n    };\n    if (\n      ukraineResponse.status === 'fulfilled' &&\n      ukraineResponse.value.data?.[1]?.length > 0\n    ) {\n      const ukraineData = ukraineResponse.value.data[1].find(\n        (item) => item.value !== null,\n      );\n      if (ukraineData) {\n        const prevData = ukraineResponse.value.data[1].find(\n          (item) =>\n            item.value !== null &&\n            parseInt(item.date) < parseInt(ukraineData.date),\n        );\n        ukraineGDP = {\n          value: parseFloat(ukraineData.value.toFixed(1)),\n          trend: prevData\n            ? ukraineData.value > prevData.value\n              ? 'up'\n              : 'down'\n            : 'up',\n          year: ukraineData.date,\n          source: 'World Bank Official',\n        };\n      }\n    }\n\n    const data = {\n      usa: usaGDP,\n      eu: euGDP,\n      ukraine: ukraineGDP,\n      source: 'World Bank API + Updated fallbacks',\n      timestamp: Date.now(),\n    };\n\n    console.log('‚úÖ REAL GDP Data:', data);\n    setCache(cacheKey, data);\n    return data;\n  } catch (error) {\n    console.error('‚ùå GDP error:', error.message);\n    // Updated fallback data\n    const fallbackData = {\n      usa: {\n        value: 2.4,\n        trend: 'up',\n        year: '2024',\n        source: 'Updated fallback',\n      },\n      eu: { value: 0.8, trend: 'up', year: '2024', source: 'Updated fallback' },\n      ukraine: {\n        value: 4.2,\n        trend: 'up',\n        year: '2024',\n        source: 'Updated fallback',\n      },\n      source: 'Updated fallback GDP data (May 2025)',\n      timestamp: Date.now(),\n    };\n    return fallbackData;\n  }\n};\n\n// ====== 4. ECONOMIC EVENTS - REAL API ======\nconst getImportantEvents = async () => {\n  const cacheKey = 'events_real';\n  const cached = getCached(cacheKey);\n  if (cached) {\n    return cached;\n  }\n\n  try {\n    console.log('üìÖ Fetching REAL economic events...');\n\n    let realEvents = [];\n\n    try {\n      // Try to get events from ForexFactory\n      const calendarResponse = await axios.get(\n        'https://nfs.faireconomy.media/ff_calendar_thisweek.json',\n        {\n          timeout: 8000,\n        },\n      );\n\n      if (calendarResponse.data && Array.isArray(calendarResponse.data)) {\n        realEvents = calendarResponse.data\n          .filter(\n            (event) => event.impact === 'High' || event.impact === 'Medium',\n          )\n          .slice(0, 10)\n          .map((event) => ({\n            date: event.date,\n            event: event.title,\n            currency:\n              event.country === 'USD'\n                ? 'USD'\n                : event.country === 'EUR'\n                  ? 'EUR'\n                  : event.country,\n            impact: event.impact.toLowerCase(),\n            description: event.detail || 'Important economic indicator',\n          }));\n      }\n    } catch (calendarError) {\n      console.log(\n        '‚ö†Ô∏è Economic calendar API failed, generating realistic events',\n      );\n    }\n\n    // If few real events, supplement with realistic ones\n    if (realEvents.length < 5) {\n      const today = new Date();\n      const realisticEvents = [\n        {\n          date: new Date(today.getTime() + 24 * 60 * 60 * 1000)\n            .toISOString()\n            .split('T')[0],\n          event: 'US Consumer Price Index (CPI)',\n          currency: 'USD',\n          impact: 'high',\n          description:\n            'Monthly inflation measurement - key Fed policy indicator',\n        },\n        {\n          date: new Date(today.getTime() + 2 * 24 * 60 * 60 * 1000)\n            .toISOString()\n            .split('T')[0],\n          event: 'ECB Interest Rate Decision',\n          currency: 'EUR',\n          impact: 'high',\n          description: 'European Central Bank monetary policy decision',\n        },\n        {\n          date: new Date(today.getTime() + 3 * 24 * 60 * 60 * 1000)\n            .toISOString()\n            .split('T')[0],\n          event: 'US Non-Farm Payrolls',\n          currency: 'USD',\n          impact: 'high',\n          description: 'Monthly employment report - major market mover',\n        },\n        {\n          date: new Date(today.getTime() + 4 * 24 * 60 * 60 * 1000)\n            .toISOString()\n            .split('T')[0],\n          event: 'NBU Monetary Policy Meeting',\n          currency: 'UAH',\n          impact: 'high',\n          description: 'Ukrainian central bank rate decision',\n        },\n        {\n          date: new Date(today.getTime() + 5 * 24 * 60 * 60 * 1000)\n            .toISOString()\n            .split('T')[0],\n          event: 'Eurozone GDP Flash Estimate',\n          currency: 'EUR',\n          impact: 'medium',\n          description: 'Quarterly economic growth preliminary data',\n        },\n        {\n          date: new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000)\n            .toISOString()\n            .split('T')[0],\n          event: 'Fed Chair Powell Speech',\n          currency: 'USD',\n          impact: 'medium',\n          description: 'Federal Reserve Chair public remarks',\n        },\n      ];\n\n      realEvents = [...realEvents, ...realisticEvents].slice(0, 10);\n    }\n\n    console.log('‚úÖ Economic events loaded:', realEvents.length);\n    setCache(cacheKey, realEvents);\n    return realEvents;\n  } catch (error) {\n    console.error('‚ùå Events error:', error.message);\n\n    // Realistic fallback events\n    const today = new Date();\n    const fallbackEvents = [\n      {\n        date: new Date(today.getTime() + 24 * 60 * 60 * 1000)\n          .toISOString()\n          .split('T')[0],\n        event: 'US Consumer Price Index (CPI)',\n        currency: 'USD',\n        impact: 'high',\n        description: 'Monthly inflation data release',\n      },\n      {\n        date: new Date(today.getTime() + 3 * 24 * 60 * 60 * 1000)\n          .toISOString()\n          .split('T')[0],\n        event: 'ECB Policy Decision',\n        currency: 'EUR',\n        impact: 'high',\n        description: 'European Central Bank rate decision',\n      },\n      {\n        date: new Date(today.getTime() + 4 * 24 * 60 * 60 * 1000)\n          .toISOString()\n          .split('T')[0],\n        event: 'NBU Rate Decision',\n        currency: 'UAH',\n        impact: 'high',\n        description: 'Ukrainian central bank meeting',\n      },\n    ];\n\n    return fallbackEvents;\n  }\n};\n\n// ====== 5. EXCHANGE RATES - REAL DATA ======\nconst getCurrentExchangeRates = async () => {\n  const cacheKey = 'exchange_rates_real';\n  const cached = getCached(cacheKey);\n  if (cached) {\n    return cached;\n  }\n\n  try {\n    console.log('üí± Fetching REAL exchange rates...');\n    const fallbacks = getLatestFallbackRates();\n\n    // Try multiple sources\n    const [nbuResponse, monobankResponse] = await Promise.allSettled([\n      // NBU official rates\n      axios.get(\n        'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange',\n        {\n          params: { json: true },\n          timeout: 5000,\n        },\n      ),\n\n      // Monobank API (market rates)\n      axios.get('https://api.monobank.ua/bank/currency', {\n        timeout: 5000,\n      }),\n    ]);\n\n    const usdUah = {\n      official: fallbacks.usdUah.official,\n      market: fallbacks.usdUah.market,\n      source: 'Updated fallback',\n    };\n    const eurUah = {\n      official: fallbacks.eurUah.official,\n      market: fallbacks.eurUah.market,\n      source: 'Updated fallback',\n    };\n\n    // Process NBU data\n    if (nbuResponse.status === 'fulfilled' && nbuResponse.value.data) {\n      const usdRate = nbuResponse.value.data.find((item) => item.cc === 'USD');\n      const eurRate = nbuResponse.value.data.find((item) => item.cc === 'EUR');\n\n      if (usdRate) {\n        usdUah.official = parseFloat(usdRate.rate.toFixed(2));\n        usdUah.source = 'NBU Official';\n      }\n      if (eurRate) {\n        eurUah.official = parseFloat(eurRate.rate.toFixed(2));\n        eurUah.source = 'NBU Official';\n      }\n    }\n\n    // Process Monobank data (market rates)\n    if (\n      monobankResponse.status === 'fulfilled' &&\n      monobankResponse.value.data\n    ) {\n      const usdMono = monobankResponse.value.data.find(\n        (item) => item.currencyCodeA === 840,\n      ); // USD\n      const eurMono = monobankResponse.value.data.find(\n        (item) => item.currencyCodeA === 978,\n      ); // EUR\n\n      if (usdMono && usdMono.rateBuy && usdMono.rateSell) {\n        usdUah.market = parseFloat(\n          ((usdMono.rateBuy + usdMono.rateSell) / 2).toFixed(2),\n        );\n      }\n      if (eurMono && eurMono.rateBuy && eurMono.rateSell) {\n        eurUah.market = parseFloat(\n          ((eurMono.rateBuy + eurMono.rateSell) / 2).toFixed(2),\n        );\n      }\n    }\n\n    const data = {\n      USDUAH: usdUah,\n      EURUAH: eurUah,\n      timestamp: Date.now(),\n    };\n\n    console.log('‚úÖ REAL Exchange Rates:', data);\n    setCache(cacheKey, data);\n    return data;\n  } catch (error) {\n    console.error('‚ùå Exchange rates error:', error.message);\n    const fallbacks = getLatestFallbackRates();\n    return {\n      USDUAH: fallbacks.usdUah,\n      EURUAH: fallbacks.eurUah,\n      timestamp: Date.now(),\n    };\n  }\n};\n\n// ====== VOLATILITY AND RISKS WITH ADAPTIVE THRESHOLDS ======\nconst calculateVolatilityRisk = (dxy, events) => {\n  let volatilityScore = 0;\n\n  // Adaptive calculation based on DXY volatility\n  const dxyVolatility = Math.abs(dxy.changePercent);\n  volatilityScore += dxyVolatility * 3; // Increased coefficient\n\n  // Events with importance weights\n  const highImpactEvents = events.filter((e) => e.impact === 'high').length;\n  const mediumImpactEvents = events.filter((e) => e.impact === 'medium').length;\n  volatilityScore += highImpactEvents * 6 + mediumImpactEvents * 3;\n\n  // Adaptive thresholds\n  let riskLevel = 'LOW';\n  if (volatilityScore > 20) {\n    riskLevel = 'HIGH';\n  } else if (volatilityScore > 12) {\n    riskLevel = 'MEDIUM';\n  }\n\n  return {\n    score: Math.round(volatilityScore),\n    level: riskLevel,\n    description: getRiskDescription(riskLevel),\n    components: {\n      dxyImpact: Math.round(dxyVolatility * 3),\n      eventsImpact: Math.round(highImpactEvents * 6 + mediumImpactEvents * 3),\n    },\n  };\n};\n\nconst getRiskDescription = (level) => {\n  switch (level) {\n    case 'HIGH':\n      return 'High risks - significant currency movements expected';\n    case 'MEDIUM':\n      return 'Moderate risks - monitor key events';\n    default:\n      return 'Low risks - relatively stable situation';\n  }\n};\n\n// ====== SEASONAL FACTORS WITH DETAILS ======\nconst getSeasonalFactors = () => {\n  const now = new Date();\n  const month = now.getMonth();\n  const day = now.getDate();\n\n  // More detailed seasonality analysis\n  const factors = {\n    isEndOfQuarter: [2, 5, 8, 11].includes(month),\n    isYearEnd: month === 11,\n    isSummerLull: [5, 6, 7].includes(month),\n    isEndOfMonth: day > 25,\n    isEndOfYear: month === 11 && day > 15,\n    description: getSeasonalDescription(month, day),\n  };\n\n  // Calculate seasonal impact\n  let seasonalImpact = 0;\n  if (factors.isYearEnd) {\n    seasonalImpact += 0.8;\n  } else if (factors.isEndOfQuarter) {\n    seasonalImpact += 0.5;\n  } else if (factors.isEndOfMonth) {\n    seasonalImpact += 0.2;\n  }\n\n  if (factors.isSummerLull) {\n    seasonalImpact -= 0.3;\n  }\n\n  factors.impact = parseFloat(seasonalImpact.toFixed(1));\n\n  return factors;\n};\n\nconst getSeasonalDescription = (month, day) => {\n  if (month === 11 && day > 15) {\n    return 'Year-end - active portfolio rebalancing';\n  }\n  if ([2, 5, 8, 11].includes(month)) {\n    return 'Quarter-end - increased trading activity';\n  }\n  if ([5, 6, 7].includes(month)) {\n    return 'Summer period - reduced liquidity';\n  }\n  if (day > 25) {\n    return 'Month-end - technical bank operations';\n  }\n  return 'Normal trading activity';\n};\n\n// ====== IMPROVED USD/UAH ANALYSIS WITH REAL DATA ======\nconst analyzeUSDUAHRealistic = async (\n  dxy,\n  rates,\n  gdp,\n  events,\n  currentRates,\n  seasonalFactors,\n) => {\n  let score = 0;\n  const factors = [];\n\n  console.log('üîç Starting realistic USD/UAH analysis...');\n\n  // Get adaptive thresholds\n  const thresholds = getAdaptiveThresholds(dxy, rates, gdp);\n\n  // Get real correlations\n  const correlations = await calculateRealCorrelations(\n    dxy,\n    rates,\n    currentRates,\n  );\n\n  // 1. DXY analysis with adaptive thresholds\n  if (dxy.trend === 'up' && dxy.changePercent > thresholds.dxyStrong) {\n    score += 4;\n    factors.push(\n      `üí™ DXY rising strongly (${dxy.changePercent}% > ${thresholds.dxyStrong}%) - powerful USD support`,\n    );\n  } else if (dxy.trend === 'up') {\n    score += 2;\n    factors.push(\n      `üìà DXY rising moderately (${dxy.changePercent}%) - USD support`,\n    );\n  } else if (\n    dxy.trend === 'down' &&\n    dxy.changePercent < -thresholds.dxyStrong\n  ) {\n    score -= 3;\n    factors.push(\n      `üìâ DXY falling strongly (${dxy.changePercent}% < -${thresholds.dxyStrong}%) - USD pressure`,\n    );\n  } else if (dxy.trend === 'down') {\n    score -= 1;\n    factors.push(`üëá DXY weakening (${dxy.changePercent}%) - negative for USD`);\n  } else {\n    factors.push(`‚û°Ô∏è DXY sideways (${dxy.changePercent}%) - neutral influence`);\n  }\n\n  // 2. Real interest rate differential with current data\n  const realRateDiff = rates.fed - rates.nbu / 4; // Convert NBU to comparable units\n  if (realRateDiff > thresholds.rateDiff) {\n    score += 3;\n    factors.push(\n      `üè¶ Significant rate differential (${realRateDiff.toFixed(1)}pp > ${thresholds.rateDiff}) - capital flows to USD`,\n    );\n  } else if (realRateDiff > 0) {\n    score += 1;\n    factors.push(\n      `üí∞ Positive differential (${realRateDiff.toFixed(1)}pp) - moderate USD support`,\n    );\n  } else {\n    score -= 1;\n    factors.push('üí∏ Negative differential - relative UAH attractiveness');\n  }\n\n  // 3. Critical exchange rate spread analysis\n  const realSpread = currentRates.USDUAH.market - currentRates.USDUAH.official;\n  const spreadPercent = (realSpread / currentRates.USDUAH.official) * 100;\n\n  if (spreadPercent > 3) {\n    score += 2.5;\n    factors.push(\n      `üö® Critical spread ${spreadPercent.toFixed(1)}% - acute currency shortage, strong UAH pressure`,\n    );\n  } else if (spreadPercent > 1.5) {\n    score += 1.5;\n    factors.push(\n      `‚ö†Ô∏è Elevated spread ${spreadPercent.toFixed(1)}% - moderate UAH pressure`,\n    );\n  } else if (spreadPercent > 0.5) {\n    score += 0.5;\n    factors.push(\n      `üìä Normal spread ${spreadPercent.toFixed(1)}% - stable situation`,\n    );\n  } else if (spreadPercent < -1) {\n    score -= 1;\n    factors.push(\n      `üíé Market rate below official by ${Math.abs(spreadPercent).toFixed(1)}% - UAH support`,\n    );\n  }\n\n  // 4. GDP analysis with current data and trends\n  const gdpDiff = gdp.usa.value - gdp.ukraine.value;\n  if (gdpDiff > thresholds.gdpDiff) {\n    score += 2;\n    factors.push(\n      `üöÄ USA significantly outpacing growth (+${gdpDiff.toFixed(1)}pp) - fundamental USD strength`,\n    );\n  } else if (gdpDiff > 0) {\n    score += 1;\n    factors.push(\n      `üìä USA growing faster (+${gdpDiff.toFixed(1)}pp) - USD support`,\n    );\n  } else {\n    score -= 2;\n    factors.push(\n      `üá∫üá¶ Ukraine outpacing USA growth (+${Math.abs(gdpDiff).toFixed(1)}pp) - strong UAH support!`,\n    );\n  }\n\n  // GDP trend analysis\n  if (gdp.usa.trend === 'up' && gdp.ukraine.trend === 'down') {\n    score += 1.5;\n    factors.push(\n      'üìàüìâ Diverging growth trends - USA accelerating, Ukraine slowing',\n    );\n  } else if (gdp.usa.trend === 'down' && gdp.ukraine.trend === 'up') {\n    score -= 1.5;\n    factors.push('üìâüìà USA slowing, Ukraine accelerating - negative for USD');\n  } else if (gdp.ukraine.trend === 'up' && gdp.ukraine.value > 3) {\n    score -= 0.5;\n    factors.push(\n      `üî• Ukraine showing sustained growth (${gdp.ukraine.value}%) - UAH strengthening`,\n    );\n  }\n\n  // 5. Correlation analysis with real data\n  const correlationImpact =\n    Math.abs(correlations.dxyUahCorrelation) * Math.abs(dxy.changePercent);\n  if (correlationImpact > 0.4) {\n    if (dxy.changePercent > 0) {\n      score += 1;\n      factors.push(\n        `üìä Strong DXY/UAH correlation (${correlations.dxyUahCorrelation}) amplifies USD trend`,\n      );\n    } else {\n      score -= 1;\n      factors.push('üìä DXY correlation works against USD when index falls');\n    }\n  }\n\n  // 6. Events and their impact\n  const usdEvents = events.filter(\n    (e) => e.currency === 'USD' && e.impact === 'high',\n  );\n  const uahEvents = events.filter(\n    (e) => e.currency === 'UAH' && e.impact === 'high',\n  );\n\n  if (usdEvents.length > uahEvents.length) {\n    score += 0.5;\n    factors.push(\n      `üìÖ ${usdEvents.length} major USD events vs ${uahEvents.length} UAH - focus on dollar`,\n    );\n  } else if (uahEvents.length > 0) {\n    score -= 0.5;\n    factors.push(\n      `üìÖ ${uahEvents.length} major NBU events - increased UAH attention`,\n    );\n  }\n\n  // 7. Seasonal factors with impact\n  if (seasonalFactors.impact > 0.3) {\n    score += seasonalFactors.impact;\n    factors.push(\n      `üìà Seasonal factor (+${seasonalFactors.impact}) - ${seasonalFactors.description}`,\n    );\n  } else if (seasonalFactors.impact < -0.2) {\n    score += seasonalFactors.impact;\n    factors.push(\n      `üìâ Seasonal factor (${seasonalFactors.impact}) - ${seasonalFactors.description}`,\n    );\n  }\n\n  // 8. Geopolitical and macroeconomic context\n  score += 0.8;\n  factors.push('üõ°Ô∏è USD remains primary reserve currency - structural support');\n\n  // Direction determination with more precise thresholds\n  let direction = 'sideways';\n  if (score > 4.5) {\n    direction = 'bullish';\n  } else if (score < -2.5) {\n    direction = 'bearish';\n  }\n\n  // Adaptive confidence based on data quality\n  let confidence = thresholds.confidence.base;\n  if (Math.abs(dxy.changePercent) > 0.5) {\n    confidence += thresholds.confidence.dxyBonus;\n  }\n  if (rates.sources?.fed.includes('Official')) {\n    confidence += thresholds.confidence.rateBonus;\n  }\n  if (gdp.usa.source.includes('Official')) {\n    confidence += thresholds.confidence.gdpBonus;\n  }\n  if (currentRates.USDUAH.source.includes('Official')) {\n    confidence += 8;\n  }\n  if (correlations.source.includes('real data')) {\n    confidence += 10;\n  }\n  if (Math.abs(spreadPercent) < 1) {\n    confidence += 5;\n  } // Stable spread increases confidence\n  if (Math.abs(score) > 4) {\n    confidence += 8;\n  }\n\n  // Real technical levels\n  const currentPrice = currentRates.USDUAH.market;\n  const technicalLevels = await calculateAdvancedTechnicalLevels(\n    currentPrice,\n    'USDUAH',\n    Math.abs(score),\n  );\n\n  console.log('‚úÖ USD/UAH realistic analysis completed');\n\n  return {\n    direction,\n    confidence: Math.min(confidence, 95),\n    score: Math.round(score * 10) / 10,\n    factors,\n    technicalLevels,\n    currentPrice,\n    correlations,\n    spreadAnalysis: {\n      absolute: parseFloat(realSpread.toFixed(2)),\n      percent: parseFloat(spreadPercent.toFixed(2)),\n      status:\n        spreadPercent > 3\n          ? 'CRITICAL'\n          : spreadPercent > 1.5\n            ? 'ELEVATED'\n            : 'NORMAL',\n    },\n    targets: {\n      bullish: {\n        target: parseFloat((currentPrice * 1.035).toFixed(2)),\n        stop: parseFloat((currentPrice * 0.975).toFixed(2)),\n      },\n      bearish: {\n        target: parseFloat((currentPrice * 0.965).toFixed(2)),\n        stop: parseFloat((currentPrice * 1.025).toFixed(2)),\n      },\n      sideways: {\n        upper: parseFloat((currentPrice * 1.015).toFixed(2)),\n        lower: parseFloat((currentPrice * 0.985).toFixed(2)),\n      },\n    },\n  };\n};\n\n// ====== IMPROVED EUR/UAH ANALYSIS WITH REAL DATA ======\nconst analyzeEURUAHRealistic = async (\n  dxy,\n  rates,\n  gdp,\n  events,\n  currentRates,\n  seasonalFactors,\n) => {\n  let score = 0;\n  const factors = [];\n\n  console.log('üîç Starting realistic EUR/UAH analysis...');\n\n  // Get adaptive thresholds\n  const thresholds = getAdaptiveThresholds(dxy, rates, gdp);\n\n  // Get real correlations\n  const correlations = await calculateRealCorrelations(\n    dxy,\n    rates,\n    currentRates,\n  );\n\n  // 1. DXY influence on EUR with correlation\n  const eurUsdCorrelation = correlations.usdEurCorrelation;\n  if (dxy.trend === 'down' && dxy.changePercent < -thresholds.dxyStrong) {\n    score += 3;\n    factors.push(\n      `üí™ DXY falling strongly (${dxy.changePercent}%) - powerful EUR support against all currencies`,\n    );\n  } else if (dxy.trend === 'down') {\n    score += 2;\n    factors.push(`üìà Weakening USD (DXY ${dxy.changePercent}%) supports EUR`);\n  } else if (dxy.trend === 'up' && dxy.changePercent > thresholds.dxyStrong) {\n    score -= 2;\n    factors.push(\n      `üìâ Strong USD (DXY +${dxy.changePercent}%) creates serious EUR pressure`,\n    );\n  } else if (dxy.trend === 'up') {\n    score -= 1;\n    factors.push('üëá USD strength moderately pressures EUR');\n  }\n\n  // 2. ECB vs NBU rates with real data\n  const eurRateDiff = rates.ecb - rates.nbu / 4;\n  if (eurRateDiff > 1) {\n    score += 2;\n    factors.push(\n      `üè¶ ECB rate significantly higher than NBU (adjusted) by ${eurRateDiff.toFixed(1)}pp - EUR support`,\n    );\n  } else if (eurRateDiff > 0) {\n    score += 1;\n    factors.push(`üí∞ Small ECB rate advantage (+${eurRateDiff.toFixed(1)}pp)`);\n  } else {\n    score -= 1.5;\n    factors.push(\n      'üí∏ NBU rate significantly higher than ECB - strong capital outflow from EUR',\n    );\n  }\n\n  // 3. EU vs Ukraine economy with current data\n  const eurGdpDiff = gdp.eu.value - gdp.ukraine.value;\n  if (eurGdpDiff > 2) {\n    score += 2;\n    factors.push(\n      `üöÄ EU growing significantly faster (+${eurGdpDiff.toFixed(1)}pp) - fundamental EUR strength`,\n    );\n  } else if (eurGdpDiff > 0) {\n    score += 1;\n    factors.push(\n      `üìä EU showing slight outpacing (+${eurGdpDiff.toFixed(1)}pp)`,\n    );\n  } else {\n    score -= 2;\n    factors.push(\n      `üá∫üá¶ Ukraine significantly outpacing EU (+${Math.abs(eurGdpDiff).toFixed(1)}pp) - strong UAH support!`,\n    );\n  }\n\n  // 4. Growth trend analysis\n  if (gdp.eu.trend === 'up' && gdp.ukraine.trend === 'down') {\n    score += 2;\n    factors.push('üìàüìâ Diverging trends - EU accelerating, Ukraine slowing');\n  } else if (gdp.eu.trend === 'down') {\n    score -= 1.5;\n    factors.push('üìâ EU in recession/slowdown - serious EUR negative');\n  } else if (gdp.eu.trend === 'up') {\n    score += 0.5;\n    factors.push('üìà EU showing growth - EUR support');\n  }\n\n  if (gdp.ukraine.trend === 'up' && gdp.ukraine.value > 3) {\n    score -= 1;\n    factors.push(\n      `üî• Strong Ukraine economic recovery (${gdp.ukraine.value}%) strengthens UAH`,\n    );\n  }\n\n  // 5. Official/market EUR/UAH rate spread\n  const eurSpread = currentRates.EURUAH.market - currentRates.EURUAH.official;\n  const eurSpreadPercent = (eurSpread / currentRates.EURUAH.official) * 100;\n\n  if (eurSpreadPercent > 3) {\n    score += 2;\n    factors.push(\n      `üö® Critical EUR/UAH spread ${eurSpreadPercent.toFixed(1)}% - acute UAH pressure`,\n    );\n  } else if (eurSpreadPercent > 1.5) {\n    score += 1;\n    factors.push(\n      `‚ö†Ô∏è Elevated EUR/UAH spread ${eurSpreadPercent.toFixed(1)}% - moderate UAH pressure`,\n    );\n  } else if (eurSpreadPercent < -1) {\n    score -= 1;\n    factors.push('üíé EUR market rate below official - unusual UAH support');\n  }\n\n  // 6. ECB events and their impact\n  const eurEvents = events.filter(\n    (e) => e.currency === 'EUR' && e.impact === 'high',\n  );\n  const uahEvents = events.filter(\n    (e) => e.currency === 'UAH' && e.impact === 'high',\n  );\n\n  if (eurEvents.length > 0) {\n    score += 0.5 * eurEvents.length;\n    factors.push(\n      `üìÖ ${eurEvents.length} major ECB decisions this week - potential EUR volatility increase`,\n    );\n  }\n\n  if (uahEvents.length > 0) {\n    score -= 0.3 * uahEvents.length;\n    factors.push(\n      `üìÖ ${uahEvents.length} NBU events - attention to Ukrainian currency`,\n    );\n  }\n\n  // 7. Trade links and integration\n  score += 0.3;\n  factors.push(\n    'üåç EU-Ukraine trade integration creates structural currency linkage',\n  );\n\n  // 8. Seasonal factors\n  if (seasonalFactors.impact > 0.3) {\n    score += seasonalFactors.impact * 0.7; // Less impact on EUR/UAH\n    factors.push(\n      `üìà EUR seasonal factor (+${(seasonalFactors.impact * 0.7).toFixed(1)}) - ${seasonalFactors.description}`,\n    );\n  }\n\n  // Direction determination with adaptive thresholds\n  let direction = 'sideways';\n  if (score > 3.5) {\n    direction = 'bullish';\n  } else if (score < -2.5) {\n    direction = 'bearish';\n  }\n\n  // Confidence accounting for EUR/UAH specifics\n  let confidence = 62; // Base confidence slightly higher for EUR\n  if (Math.abs(dxy.changePercent) > 0.3) {\n    confidence += 8;\n  }\n  if (rates.sources?.ecb?.includes('Official')) {\n    confidence += 10;\n  }\n  if (gdp.eu.source?.includes('Official')) {\n    confidence += 8;\n  }\n  if (currentRates.EURUAH.source?.includes('Official')) {\n    confidence += 8;\n  }\n  if (correlations.source?.includes('real data')) {\n    confidence += 8;\n  }\n  if (Math.abs(eurSpreadPercent) < 1) {\n    confidence += 5;\n  }\n  if (Math.abs(score) > 3) {\n    confidence += 10;\n  }\n\n  // Real technical levels for EUR/UAH\n  const currentPrice = currentRates.EURUAH.market;\n  const technicalLevels = await calculateAdvancedTechnicalLevels(\n    currentPrice,\n    'EURUAH',\n    Math.abs(score),\n  );\n\n  console.log('‚úÖ EUR/UAH realistic analysis completed');\n\n  return {\n    direction,\n    confidence: Math.min(confidence, 92),\n    score: Math.round(score * 10) / 10,\n    factors,\n    technicalLevels,\n    currentPrice,\n    correlations,\n    spreadAnalysis: {\n      absolute: parseFloat(eurSpread.toFixed(2)),\n      percent: parseFloat(eurSpreadPercent.toFixed(2)),\n      status:\n        eurSpreadPercent > 3\n          ? 'CRITICAL'\n          : eurSpreadPercent > 1.5\n            ? 'ELEVATED'\n            : 'NORMAL',\n    },\n    targets: {\n      bullish: {\n        target: parseFloat((currentPrice * 1.04).toFixed(2)),\n        stop: parseFloat((currentPrice * 0.97).toFixed(2)),\n      },\n      bearish: {\n        target: parseFloat((currentPrice * 0.96).toFixed(2)),\n        stop: parseFloat((currentPrice * 1.03).toFixed(2)),\n      },\n      sideways: {\n        upper: parseFloat((currentPrice * 1.02).toFixed(2)),\n        lower: parseFloat((currentPrice * 0.98).toFixed(2)),\n      },\n    },\n  };\n};\n\n// ====== MARKET SENTIMENT ANALYSIS WITH REAL DATA ======\nconst analyzeMarketSentiment = (dxy, rates, gdp, events, currentRates) => {\n  const sentiment = {\n    usdStrength:\n      dxy.changePercent > 0.2\n        ? 'STRONG'\n        : dxy.changePercent < -0.2\n          ? 'WEAK'\n          : 'NEUTRAL',\n    globalGrowth:\n      (gdp.usa.value + gdp.eu.value) / 2 > 1.8 ? 'EXPANDING' : 'SLOWING',\n    riskAppetite: 'NEUTRAL',\n    volatilityExpected:\n      events.filter((e) => e.impact === 'high').length > 2 ? 'HIGH' : 'MEDIUM',\n    currencyStress: 'NORMAL',\n  };\n\n  // Risk appetite analysis\n  if (dxy.changePercent < -0.8) {\n    sentiment.riskAppetite = 'HIGH';\n  } else if (dxy.changePercent > 0.8) {\n    sentiment.riskAppetite = 'LOW';\n  }\n\n  // Currency stress analysis through spreads\n  const usdSpread =\n    (Math.abs(currentRates.USDUAH.market - currentRates.USDUAH.official) /\n      currentRates.USDUAH.official) *\n    100;\n  const eurSpread =\n    (Math.abs(currentRates.EURUAH.market - currentRates.EURUAH.official) /\n      currentRates.EURUAH.official) *\n    100;\n\n  const avgSpread = (usdSpread + eurSpread) / 2;\n  if (avgSpread > 3) {\n    sentiment.currencyStress = 'HIGH';\n  } else if (avgSpread > 1.5) {\n    sentiment.currencyStress = 'ELEVATED';\n  }\n\n  return sentiment;\n};\n\n// ====== MAIN ENDPOINT ======\nconst getFundamentalDashboard = async (req, res) => {\n  try {\n    console.log(\n      'üöÄ Starting ENHANCED fundamental analysis with REALISTIC data...',\n    );\n\n    // Get base data in parallel\n    const [dxy, rates, gdp, events, currentRates] = await Promise.all([\n      getDXYData(),\n      getInterestRates(),\n      getGDPData(),\n      getImportantEvents(),\n      getCurrentExchangeRates(),\n    ]);\n\n    console.log(\n      'üìä All REAL data fetched, starting enhanced realistic analysis...',\n    );\n\n    // Extended analytics with real data\n    const volatilityRisk = calculateVolatilityRisk(dxy, events);\n    const seasonalFactors = getSeasonalFactors();\n    const marketSentiment = analyzeMarketSentiment(\n      dxy,\n      rates,\n      gdp,\n      events,\n      currentRates,\n    );\n\n    // Detailed currency pair analysis with realistic models\n    const usdUahAnalysis = await analyzeUSDUAHRealistic(\n      dxy,\n      rates,\n      gdp,\n      events,\n      currentRates,\n      seasonalFactors,\n    );\n    const eurUahAnalysis = await analyzeEURUAHRealistic(\n      dxy,\n      rates,\n      gdp,\n      events,\n      currentRates,\n      seasonalFactors,\n    );\n\n    // ‚úÖ FIX: First create apiStatus separately\n    const apiStatus = {\n      dxy: dxy.source.includes('Yahoo Finance')\n        ? '‚úÖ Active'\n        : '‚ö†Ô∏è Updated Fallback',\n      fed: rates.sources.fed.includes('Official')\n        ? '‚úÖ Active'\n        : '‚ö†Ô∏è Updated Fallback',\n      ecb: rates.sources.ecb.includes('Official')\n        ? '‚úÖ Active'\n        : '‚ö†Ô∏è Updated Fallback',\n      nbu: rates.sources.nbu.includes('Official')\n        ? '‚úÖ Active'\n        : '‚ö†Ô∏è Updated Fallback',\n      worldBank: gdp.usa.source.includes('Official')\n        ? '‚úÖ Active'\n        : '‚ö†Ô∏è Updated Fallback',\n      exchangeRates: currentRates.USDUAH.source.includes('Official')\n        ? '‚úÖ Active'\n        : '‚ö†Ô∏è Updated Fallback',\n      correlations: usdUahAnalysis.correlations.source.includes('real data')\n        ? '‚úÖ Calculated'\n        : '‚ö†Ô∏è Estimated',\n    };\n\n    // Now use the already created apiStatus\n    const dataQuality =\n      Object.values(apiStatus).filter((status) => status.includes('‚úÖ'))\n        .length >= 4\n        ? 'HIGH'\n        : 'MEDIUM';\n\n    const response = {\n      // Base indicators\n      indicators: {\n        dxy,\n        rates,\n        gdp,\n        currentRates,\n      },\n\n      // Extended forecasts with realistic data\n      forecasts: {\n        USDUAH: {\n          direction: usdUahAnalysis.direction,\n          confidence: usdUahAnalysis.confidence,\n          reasons: usdUahAnalysis.factors,\n          score: usdUahAnalysis.score,\n          technicalLevels: usdUahAnalysis.technicalLevels,\n          targets: usdUahAnalysis.targets,\n          currentPrice: usdUahAnalysis.currentPrice,\n          correlations: usdUahAnalysis.correlations,\n          spreadAnalysis: usdUahAnalysis.spreadAnalysis,\n        },\n        EURUAH: {\n          direction: eurUahAnalysis.direction,\n          confidence: eurUahAnalysis.confidence,\n          reasons: eurUahAnalysis.factors,\n          score: eurUahAnalysis.score,\n          technicalLevels: eurUahAnalysis.technicalLevels,\n          targets: eurUahAnalysis.targets,\n          currentPrice: eurUahAnalysis.currentPrice,\n          correlations: eurUahAnalysis.correlations,\n          spreadAnalysis: eurUahAnalysis.spreadAnalysis,\n        },\n      },\n\n      // Additional analytics\n      analytics: {\n        marketSentiment,\n        volatilityRisk,\n        seasonalFactors,\n      },\n\n      // Events\n      upcomingEvents: events,\n\n      // Meta-information\n      lastUpdate: new Date().toISOString(),\n      dataSource: 'REALISTIC APIs + ADVANCED ANALYTICS',\n      sources: {\n        dxy: dxy.source,\n        rates: rates.sources,\n        gdp: `USA: ${gdp.usa.source}, EU: ${gdp.eu.source}, UA: ${gdp.ukraine.source}`,\n        events:\n          events.length > 5\n            ? 'Economic Calendar API + Realistic Events'\n            : 'Realistic Generated Events',\n        exchangeRates: `USD: ${currentRates.USDUAH.source}, EUR: ${currentRates.EURUAH.source}`,\n        technicalLevels: 'Market-based calculations',\n        correlations: usdUahAnalysis.correlations.source,\n      },\n\n      // API status (already created above)\n      apiStatus,\n\n      // Analysis summary\n      summary: {\n        usdUahOutlook: `${usdUahAnalysis.direction.toUpperCase()} with ${usdUahAnalysis.confidence}% confidence`,\n        eurUahOutlook: `${eurUahAnalysis.direction.toUpperCase()} with ${eurUahAnalysis.confidence}% confidence`,\n        keyRisks: [\n          volatilityRisk.level === 'HIGH' ? 'High volatility expected' : null,\n          usdUahAnalysis.spreadAnalysis.status === 'CRITICAL'\n            ? 'Critical USD/UAH spread'\n            : null,\n          eurUahAnalysis.spreadAnalysis.status === 'CRITICAL'\n            ? 'Critical EUR/UAH spread'\n            : null,\n          marketSentiment.currencyStress === 'HIGH'\n            ? 'High currency stress'\n            : null,\n        ].filter((risk) => risk !== null),\n        marketRegime:\n          marketSentiment.riskAppetite === 'HIGH'\n            ? 'Risk-On'\n            : marketSentiment.riskAppetite === 'LOW'\n              ? 'Risk-Off'\n              : 'Mixed',\n        dataQuality,\n      },\n    };\n\n    console.log('üéØ Enhanced REALISTIC analysis complete:');\n    console.log(\n      'üìä USD/UAH:',\n      usdUahAnalysis.direction,\n      `${usdUahAnalysis.confidence}%`,\n      'at',\n      usdUahAnalysis.currentPrice,\n    );\n    console.log(\n      'üìä EUR/UAH:',\n      eurUahAnalysis.direction,\n      `${eurUahAnalysis.confidence}%`,\n      'at',\n      eurUahAnalysis.currentPrice,\n    );\n    console.log('üî• Market Sentiment:', marketSentiment);\n    console.log('üì° API Status:', apiStatus);\n    console.log('üí° Data Quality:', dataQuality);\n\n    res.json(response);\n  } catch (error) {\n    console.error('‚ùå Enhanced REALISTIC analysis error:', error.message);\n    console.error('‚ùå Stack trace:', error.stack);\n\n    // Detailed error response\n    res.status(500).json({\n      error: 'Enhanced REALISTIC analysis temporarily unavailable',\n      message: error.message,\n      timestamp: new Date().toISOString(),\n      fallbackAvailable: true,\n      suggestedRetry: '15 minutes',\n      supportInfo: {\n        issue: 'API connectivity or calculation error',\n        contact: 'Check logs for specific API failures',\n        fallbackSources: 'Updated May 2025 fallback data available',\n      },\n    });\n  }\n};\n\nmodule.exports = {\n  getFundamentalDashboard,\n  getDXYData,\n  getInterestRates,\n  getGDPData,\n  getImportantEvents,\n  getCurrentExchangeRates,\n  calculateRealCorrelations,\n  calculateAdvancedTechnicalLevels,\n  getAdaptiveThresholds,\n  analyzeUSDUAHRealistic,\n  analyzeEURUAHRealistic,\n};\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/controllers/priceAlertsController.js","messages":[{"ruleId":"complexity","severity":2,"message":"Async arrow function has a complexity of 16. Maximum allowed is 15.","line":19,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":121,"endColumn":2},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":19,"column":43,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":19,"endColumn":45},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":127,"column":40,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":127,"endColumn":42},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":234,"column":41,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":234,"endColumn":43},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":309,"column":38,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":309,"endColumn":40},{"ruleId":"max-statements","severity":2,"message":"Async arrow function has too many statements (41). Maximum allowed is 30.","line":492,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"exceed","endLine":611,"endColumn":2}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// server/src/controllers/priceAlertsController.js\nconst admin = require('firebase-admin');\nconst axios = require('axios');\n\n// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase Admin (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–¥–µ–ª–∞–Ω–æ –≤ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ)\nif (!admin.apps.length) {\n  admin.initializeApp({\n    credential: admin.credential.cert({\n      projectId: process.env.FIREBASE_PROJECT_ID,\n      privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\n      clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n    }),\n  });\n}\n\nconst db = admin.firestore();\n\n// ====== –°–û–ó–î–ê–ù–ò–ï –ê–õ–ï–†–¢–ê ======\nconst createPriceAlert = async (req, res) => {\n  try {\n    const {\n      userId,\n      currencyPair, // 'USDUAH' | 'EURUAH'\n      alertType, // 'above' | 'below'\n      targetPrice,\n      pushToken, // Expo push token\n      isActive = true,\n    } = req.body;\n\n    // –í–∞–ª–∏–¥–∞—Ü–∏—è\n    if (!userId || !currencyPair || !alertType || !targetPrice || !pushToken) {\n      return res.status(400).json({\n        error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è',\n        required: [\n          'userId',\n          'currencyPair',\n          'alertType',\n          'targetPrice',\n          'pushToken',\n        ],\n      });\n    }\n\n    if (!['USDUAH', 'EURUAH'].includes(currencyPair)) {\n      return res.status(400).json({\n        error: '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –≤–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞',\n        supported: ['USDUAH', 'EURUAH'],\n      });\n    }\n\n    if (!['above', 'below'].includes(alertType)) {\n      return res.status(400).json({\n        error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –∞–ª–µ—Ä—Ç–∞',\n        supported: ['above', 'below'],\n      });\n    }\n\n    if (targetPrice <= 0) {\n      return res.status(400).json({\n        error: '–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0',\n      });\n    }\n\n    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏\n    const currentRates = await getCurrentExchangeRates();\n    const currentPrice = currentRates[currencyPair]?.market;\n\n    if (!currentPrice) {\n      return res.status(500).json({\n        error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç',\n      });\n    }\n\n    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏—á–Ω–æ—Å—Ç—å –∞–ª–µ—Ä—Ç–∞\n    if (alertType === 'above' && targetPrice <= currentPrice) {\n      console.warn(\n        `‚ö†Ô∏è Alert above ${targetPrice} but current price is ${currentPrice}`,\n      );\n    }\n    if (alertType === 'below' && targetPrice >= currentPrice) {\n      console.warn(\n        `‚ö†Ô∏è Alert below ${targetPrice} but current price is ${currentPrice}`,\n      );\n    }\n\n    // –°–æ–∑–¥–∞–µ–º –∞–ª–µ—Ä—Ç –≤ Firestore\n    const alertData = {\n      userId,\n      currencyPair,\n      alertType,\n      targetPrice: parseFloat(targetPrice),\n      pushToken,\n      isActive,\n      createdAt: admin.firestore.FieldValue.serverTimestamp(),\n      triggeredAt: null,\n      currentPriceAtCreation: currentPrice,\n      lastChecked: admin.firestore.FieldValue.serverTimestamp(),\n    };\n\n    const docRef = await db.collection('priceAlerts').add(alertData);\n\n    console.log(`‚úÖ Price alert created: ${docRef.id} for user ${userId}`);\n\n    res.status(201).json({\n      success: true,\n      alertId: docRef.id,\n      message: `–ê–ª–µ—Ä—Ç —Å–æ–∑–¥–∞–Ω: ${currencyPair} ${alertType === 'above' ? '–≤—ã—à–µ' : '–Ω–∏–∂–µ'} ${targetPrice}‚Ç¥`,\n      data: {\n        ...alertData,\n        id: docRef.id,\n        createdAt: new Date().toISOString(),\n      },\n    });\n  } catch (error) {\n    console.error('‚ùå Create alert error:', error);\n    res.status(500).json({\n      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–ª–µ—Ä—Ç–∞',\n      message: error.message,\n    });\n  }\n};\n\n// ====== –ü–û–õ–£–ß–ï–ù–ò–ï –ê–õ–ï–†–¢–û–í –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ======\n// server/src/controllers/priceAlertsController.js - –£–ü–†–û–©–ï–ù–ù–´–ï –ó–ê–ü–†–û–°–´\n\n// ====== –ü–û–õ–£–ß–ï–ù–ò–ï –ê–õ–ï–†–¢–û–í –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø (–ë–ï–ó –°–û–†–¢–ò–†–û–í–ö–ò) ======\nconst getUserAlerts = async (req, res) => {\n  console.log('üì• GET USER ALERTS REQUEST:', {\n    params: req.params,\n    query: req.query,\n  });\n\n  try {\n    const { userId } = req.params;\n\n    if (!userId) {\n      console.error('‚ùå Missing userId parameter');\n      return res.status(400).json({\n        error: 'userId –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω',\n      });\n    }\n\n    console.log('üîç Getting alerts for userId:', userId);\n\n    // ‚úÖ –£–ü–†–û–©–ï–ù–ù–´–ô –ó–ê–ü–†–û–° –ë–ï–ó orderBy (–ù–ï –¢–†–ï–ë–£–ï–¢ –ò–ù–î–ï–ö–°–ê)\n    const alertsSnapshot = await db\n      .collection('priceAlerts')\n      .where('userId', '==', userId)\n      .get();\n\n    console.log('üìä Found alerts:', alertsSnapshot.size);\n\n    const alerts = [];\n    alertsSnapshot.forEach((doc) => {\n      const data = doc.data();\n      console.log('üìÑ Processing alert:', doc.id, {\n        currencyPair: data.currencyPair,\n        targetPrice: data.targetPrice,\n        isActive: data.isActive,\n      });\n\n      alerts.push({\n        id: doc.id,\n        ...data,\n        // ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û–ï –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–ï TIMESTAMP\n        createdAt: data.createdAt?.toDate\n          ? data.createdAt.toDate().toISOString()\n          : new Date().toISOString(),\n        triggeredAt: data.triggeredAt?.toDate\n          ? data.triggeredAt.toDate().toISOString()\n          : null,\n        lastChecked: data.lastChecked?.toDate\n          ? data.lastChecked.toDate().toISOString()\n          : new Date().toISOString(),\n      });\n    });\n\n    // ‚úÖ –°–û–†–¢–ò–†–û–í–ö–ê –ù–ê –ö–õ–ò–ï–ù–¢–ï (–ü–û–°–õ–ï –ü–û–õ–£–ß–ï–ù–ò–Ø –î–ê–ù–ù–´–•)\n    alerts.sort(\n      (a, b) =>\n        new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime(),\n    );\n\n    console.log('‚úÖ Processed and sorted alerts:', alerts.length);\n\n    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞\n    console.log('üí± Getting current rates for status calculation...');\n    let currentRates;\n    try {\n      currentRates = await getCurrentExchangeRates();\n      console.log('üí± Current rates loaded:', Object.keys(currentRates));\n    } catch (ratesError) {\n      console.warn('‚ö†Ô∏è Failed to load current rates:', ratesError.message);\n      currentRates = {\n        USDUAH: { market: 41.8 },\n        EURUAH: { market: 44.6 },\n      };\n    }\n\n    // ‚úÖ –î–û–ë–ê–í–õ–Ø–ï–ú –°–¢–ê–¢–£–° –ò –¢–ï–ö–£–©–ò–ï –¶–ï–ù–´ –ö –ö–ê–ñ–î–û–ú–£ –ê–õ–ï–†–¢–£\n    const alertsWithStatus = alerts.map((alert) => {\n      const currentPrice = currentRates[alert.currencyPair]?.market;\n      const status = getAlertStatus(alert, currentPrice);\n      const distanceToTarget = calculateDistanceToTarget(alert, currentPrice);\n\n      return {\n        ...alert,\n        currentPrice,\n        status,\n        distanceToTarget,\n      };\n    });\n\n    console.log('‚úÖ Enhanced alerts with status:', alertsWithStatus.length);\n\n    res.json({\n      success: true,\n      count: alerts.length,\n      alerts: alertsWithStatus,\n    });\n  } catch (error) {\n    console.error('‚ùå GET USER ALERTS ERROR:', error);\n    console.error('‚ùå Error stack:', error.stack);\n\n    res.status(500).json({\n      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–ª–µ—Ä—Ç–æ–≤',\n      message: error.message,\n      timestamp: new Date().toISOString(),\n    });\n  }\n};\n\n// ====== –ü–û–õ–£–ß–ï–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò (–£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø) ======\nconst getAlertsStats = async (req, res) => {\n  console.log('üì• GET ALERTS STATS REQUEST:', {\n    params: req.params,\n  });\n\n  try {\n    const { userId } = req.params;\n\n    if (!userId) {\n      console.error('‚ùå Missing userId parameter');\n      return res.status(400).json({\n        error: 'userId –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω',\n      });\n    }\n\n    console.log('üìä Getting stats for userId:', userId);\n\n    // ‚úÖ –û–î–ò–ù –ü–†–û–°–¢–û–ô –ó–ê–ü–†–û–° –ë–ï–ó –°–õ–û–ñ–ù–´–• –£–°–õ–û–í–ò–ô\n    const allAlertsSnapshot = await db\n      .collection('priceAlerts')\n      .where('userId', '==', userId)\n      .get();\n\n    let activeCount = 0;\n    let triggeredCount = 0;\n    const byPair = {\n      USDUAH: { active: 0, triggered: 0 },\n      EURUAH: { active: 0, triggered: 0 },\n    };\n\n    // ‚úÖ –ü–û–î–°–ß–ï–¢ –ù–ê –ö–õ–ò–ï–ù–¢–ï\n    allAlertsSnapshot.forEach((doc) => {\n      const data = doc.data();\n\n      if (data.isActive) {\n        activeCount++;\n        if (byPair[data.currencyPair]) {\n          byPair[data.currencyPair].active++;\n        }\n      }\n\n      if (data.triggeredAt) {\n        triggeredCount++;\n        if (byPair[data.currencyPair]) {\n          byPair[data.currencyPair].triggered++;\n        }\n      }\n    });\n\n    const stats = {\n      active: activeCount,\n      triggered: triggeredCount,\n      total: allAlertsSnapshot.size,\n      byPair,\n    };\n\n    console.log('‚úÖ Stats calculated:', stats);\n\n    res.json({\n      success: true,\n      stats,\n    });\n  } catch (error) {\n    console.error('‚ùå GET STATS ERROR:', error);\n    console.error('‚ùå Error stack:', error.stack);\n\n    res.status(500).json({\n      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏',\n      message: error.message,\n      timestamp: new Date().toISOString(),\n    });\n  }\n};\n\n// ====== –£–î–ê–õ–ï–ù–ò–ï –ê–õ–ï–†–¢–ê ======\nconst deleteAlert = async (req, res) => {\n  try {\n    const { alertId } = req.params;\n    const { userId } = req.body;\n\n    if (!alertId || !userId) {\n      return res.status(400).json({\n        error: 'alertId –∏ userId –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã',\n      });\n    }\n\n    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–ª–µ—Ä—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n    const alertDoc = await db.collection('priceAlerts').doc(alertId).get();\n\n    if (!alertDoc.exists) {\n      return res.status(404).json({\n        error: '–ê–ª–µ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',\n      });\n    }\n\n    const alertData = alertDoc.data();\n    if (alertData.userId !== userId) {\n      return res.status(403).json({\n        error: '–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∞–ª–µ—Ä—Ç–∞',\n      });\n    }\n\n    await db.collection('priceAlerts').doc(alertId).delete();\n\n    console.log(`üóëÔ∏è Alert deleted: ${alertId} by user ${userId}`);\n\n    res.json({\n      success: true,\n      message: '–ê–ª–µ—Ä—Ç —É–¥–∞–ª–µ–Ω',\n    });\n  } catch (error) {\n    console.error('‚ùå Delete alert error:', error);\n    res.status(500).json({\n      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–ª–µ—Ä—Ç–∞',\n      message: error.message,\n    });\n  }\n};\n\n// ====== –ü–û–õ–£–ß–ï–ù–ò–ï –¢–ï–ö–£–©–ò–• –ö–£–†–°–û–í (–∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π API) ======\nconst getCurrentExchangeRates = async () => {\n  try {\n    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥ –∏–∑ currencyController\n    const response = await axios.get(\n      `${process.env.API_BASE_URL || 'http://localhost:3001'}/api/dashboard/fundamental`,\n      {\n        timeout: 10000,\n      },\n    );\n\n    if (\n      response.data &&\n      response.data.indicators &&\n      response.data.indicators.currentRates\n    ) {\n      return response.data.indicators.currentRates;\n    }\n\n    // Fallback\n    return {\n      USDUAH: { official: 41.2, market: 41.8 },\n      EURUAH: { official: 44.1, market: 44.6 },\n    };\n  } catch (error) {\n    console.error('‚ùå Error getting current rates:', error.message);\n\n    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º fallback –¥–∞–Ω–Ω—ã–µ\n    return {\n      USDUAH: { official: 41.2, market: 41.8 },\n      EURUAH: { official: 44.1, market: 44.6 },\n    };\n  }\n};\n\n// ====== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ======\nconst getAlertStatus = (alert, currentPrice) => {\n  if (!currentPrice) {\n    return 'unknown';\n  }\n  if (alert.triggeredAt) {\n    return 'triggered';\n  }\n  if (!alert.isActive) {\n    return 'inactive';\n  }\n\n  const { alertType, targetPrice } = alert;\n\n  if (alertType === 'above') {\n    if (currentPrice >= targetPrice) {\n      return 'ready_to_trigger';\n    }\n    const distance = ((targetPrice - currentPrice) / currentPrice) * 100;\n    if (distance <= 2) {\n      return 'close';\n    }\n    return 'waiting';\n  } else {\n    if (currentPrice <= targetPrice) {\n      return 'ready_to_trigger';\n    }\n    const distance = ((currentPrice - targetPrice) / currentPrice) * 100;\n    if (distance <= 2) {\n      return 'close';\n    }\n    return 'waiting';\n  }\n};\n\nconst calculateDistanceToTarget = (alert, currentPrice) => {\n  if (!currentPrice) {\n    return null;\n  }\n\n  const distance = Math.abs(currentPrice - alert.targetPrice);\n  const percentage = (distance / currentPrice) * 100;\n\n  return {\n    absolute: parseFloat(distance.toFixed(2)),\n    percentage: parseFloat(percentage.toFixed(2)),\n    direction: currentPrice > alert.targetPrice ? 'above' : 'below',\n  };\n};\n\nconst sendExpoPushNotification = async (pushToken, title, body, data = {}) => {\n  try {\n    console.log(\n      'üì± Sending push notification to:',\n      `${pushToken.substring(0, 20)}...`,\n    );\n\n    // –ï—Å–ª–∏ —ç—Ç–æ fallback —Ç–æ–∫–µ–Ω - —Å–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É\n    if (pushToken.startsWith('fallback_')) {\n      console.log('üîÑ Simulating push for fallback token:', { title, body });\n      return { success: true, simulated: true };\n    }\n\n    // ‚úÖ –û–¢–ü–†–ê–í–ö–ê –ß–ï–†–ï–ó EXPO PUSH API\n    const message = {\n      to: pushToken,\n      sound: 'default',\n      title,\n      body,\n      data: {\n        ...data,\n        type: 'price_alert',\n      },\n      priority: 'high',\n      channelId: 'price-alerts',\n    };\n\n    const response = await axios.post(\n      'https://exp.host/--/api/v2/push/send',\n      message,\n      {\n        headers: {\n          Accept: 'application/json',\n          'Accept-encoding': 'gzip, deflate',\n          'Content-Type': 'application/json',\n        },\n        timeout: 10000,\n      },\n    );\n\n    if (response.data.errors) {\n      console.error('‚ùå Expo push errors:', response.data.errors);\n      return { success: false, errors: response.data.errors };\n    }\n\n    console.log('‚úÖ Push notification sent successfully');\n    return { success: true, receipt: response.data };\n  } catch (error) {\n    console.error('‚ùå Error sending push notification:', error.message);\n    return { success: false, error: error.message };\n  }\n};\n\n// ‚úÖ –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø checkAndSendAlerts –° PUSH –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø–ú–ò\nconst checkAndSendAlerts = async () => {\n  console.log('üîç Starting price alerts check...');\n\n  try {\n    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã\n    console.log('üí± Getting current exchange rates...');\n    let currentRates;\n    try {\n      const response = await axios.get(\n        'http://localhost:5001/api/fundamental-analysis',\n        {\n          timeout: 10000,\n        },\n      );\n      currentRates = response.data?.indicators?.currentRates;\n      console.log(\n        'üí± Current rates loaded:',\n        currentRates ? Object.keys(currentRates) : 'No rates',\n      );\n    } catch (ratesError) {\n      console.error('‚ùå Error getting current rates:', ratesError.message);\n      return { success: false, error: 'Failed to get current rates' };\n    }\n\n    if (!currentRates) {\n      console.error('‚ùå No current rates available');\n      return { success: false, error: 'No current rates available' };\n    }\n\n    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã\n    const alertsSnapshot = await db\n      .collection('priceAlerts')\n      .where('isActive', '==', true)\n      .where('triggeredAt', '==', null)\n      .get();\n\n    console.log(`üìä Checking ${alertsSnapshot.size} active alerts...`);\n\n    let triggeredCount = 0;\n\n    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∞–ª–µ—Ä—Ç\n    for (const alertDoc of alertsSnapshot.docs) {\n      const alert = alertDoc.data();\n      const alertId = alertDoc.id;\n\n      const currentPrice = currentRates[alert.currencyPair]?.market;\n      if (!currentPrice) {\n        console.warn(`‚ö†Ô∏è No current price for ${alert.currencyPair}`);\n        continue;\n      }\n\n      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è\n      let shouldTrigger = false;\n      if (alert.alertType === 'above' && currentPrice >= alert.targetPrice) {\n        shouldTrigger = true;\n      } else if (\n        alert.alertType === 'below' &&\n        currentPrice <= alert.targetPrice\n      ) {\n        shouldTrigger = true;\n      }\n\n      if (shouldTrigger) {\n        console.log(\n          `üéØ Alert triggered! ${alert.currencyPair} ${alert.alertType} ${alert.targetPrice} (current: ${currentPrice})`,\n        );\n\n        // –û–¢–ü–†–ê–í–õ–Ø–ï–ú PUSH –£–í–ï–î–û–ú–õ–ï–ù–ò–ï\n        const pushTitle = 'üí∞ –ê–ª–µ—Ä—Ç –ø–æ –∫—É—Ä—Å—É –≤–∞–ª—é—Ç!';\n        const pushBody = `${alert.currencyPair}: ${currentPrice.toFixed(2)}‚Ç¥ (—Ü–µ–ª—å: ${alert.targetPrice}‚Ç¥)`;\n\n        const pushResult = await sendExpoPushNotification(\n          alert.pushToken,\n          pushTitle,\n          pushBody,\n          {\n            currencyPair: alert.currencyPair,\n            currentPrice,\n            targetPrice: alert.targetPrice,\n            alertType: alert.alertType,\n          },\n        );\n\n        console.log('üì± Push notification result:', pushResult);\n\n        // –ü–æ–º–µ—á–∞–µ–º –∞–ª–µ—Ä—Ç –∫–∞–∫ —Å—Ä–∞–±–æ—Ç–∞–≤—à–∏–π\n        await db\n          .collection('priceAlerts')\n          .doc(alertId)\n          .update({\n            triggeredAt: admin.firestore.FieldValue.serverTimestamp(),\n            isActive: false,\n            triggerPrice: currentPrice,\n            pushSent: pushResult.success,\n            pushError: pushResult.success ? null : pushResult.error,\n          });\n\n        triggeredCount++;\n      } else {\n        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏\n        await db.collection('priceAlerts').doc(alertId).update({\n          lastChecked: admin.firestore.FieldValue.serverTimestamp(),\n        });\n      }\n    }\n\n    const result = {\n      success: true,\n      checked: alertsSnapshot.size,\n      triggered: triggeredCount,\n      timestamp: new Date().toISOString(),\n    };\n\n    console.log('‚úÖ Alerts check completed:', result);\n    return result;\n  } catch (error) {\n    console.error('‚ùå Error in checkAndSendAlerts:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nmodule.exports = {\n  createPriceAlert,\n  getUserAlerts,\n  deleteAlert,\n  checkAndSendAlerts,\n  getAlertsStats,\n  sendExpoPushNotification,\n  getCurrentExchangeRates,\n};\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/middlewares/cache.js","messages":[{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of arrow function.","line":10,"column":27,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":10,"endColumn":29}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const cache = require('../utils/cache');\nconst logger = require('../utils/logger');\n\n/**\n * Middleware –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ API\n * @param {number} duration - –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö\n * @returns {Function} - Middleware —Ñ—É–Ω–∫—Ü–∏—è\n */\nconst cacheMiddleware = (duration = 3600) => {\n  return (req, res, next) => {\n    // –ù–µ –∫—ç—à–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –Ω–µ-GET\n    if (req.method !== 'GET') {\n      return next();\n    }\n\n    // –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –¥–ª—è –∫—ç—à–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ URL –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞\n    const cacheKey = `__express__${req.originalUrl || req.url}`;\n\n    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞\n    const cachedBody = cache.get(cacheKey);\n\n    if (cachedBody) {\n      logger.debug(`Cache hit for: ${cacheKey}`);\n\n      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ –∫—ç—à\n      res.set('X-Cache', 'HIT');\n      return res.json(cachedBody);\n    }\n\n    logger.debug(`Cache miss for: ${cacheKey}`);\n\n    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ res.json()\n    const originalJson = res.json;\n\n    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ res.json() –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö\n    res.json = function (body) {\n      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∫—ç—à\n      cache.set(cacheKey, body, duration);\n\n      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫—ç—à–∞\n      res.set('X-Cache', 'MISS');\n\n      // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥\n      return originalJson.call(this, body);\n    };\n\n    next();\n  };\n};\n\nmodule.exports = cacheMiddleware;\n","usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/middlewares/errorHandler.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/middlewares/rateLimiter.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/routes/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/server.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/services/alertsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/services/cronService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/services/currencyService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/utils/cache.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/utils/dateUtils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/Users/emadhamad/Desktop/CurrencyTracker/server/src/utils/logger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]}]